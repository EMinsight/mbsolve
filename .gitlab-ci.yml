stages:
 - build
 - test
 - quality

.build_image_debian_docker: &build_image_debian_docker_definition
  tags:
   - docker
   - linux
  before_script:
   - ./tools/ci/setup_buildenv_debian.sh

.runtime_image_debian_docker: &runtime_image_debian_docker_definition
  tags:
   - docker
   - linux
  before_script:
   - ./tools/ci/setup_runtime_debian.sh

.build_template_make: &build_definition_make
  stage: build
  script:
   - mkdir -p build
   - cd build
   - cmake ..
   - cmake --build .
   - cmake --build . --target install
  artifacts:
    paths:
     - "build/"

.test_template_cpp_examples: &test_definition_cpp_examples
  stage: test
  script:
   - cd build
   - mbsolve-tool/mbsolve-tool -d ziolkowski1995 -e 100e-15
       -m cpu-fdtd-red-2lvl-cvr-rodr -w hdf5
   - mbsolve-tool/mbsolve-tool -d song2005 -e 16e-15
       -m cpu-fdtd-red-3lvl-cvr-rodr -w hdf5
   - mbsolve-tool/mbsolve-tool -d marskar2011 -e 40e-15
       -m cpu-fdtd-red-6lvl-cvr-rodr -w hdf5
  artifacts:
    paths:
     - "build/"

.test_template_python_examples: &test_definition_python_examples
  stage: test
  script:
   - cd build
   - PYTHONPATH=.:$PYTHONPATH python3 ../tools/python/ziolkowski1995.py
   - PYTHONPATH=.:$PYTHONPATH python3 ../tools/python/song2005.py
  artifacts:
    paths:
     - "build/"

build-debian-8:
  image: debian:8
  <<: *build_image_debian_docker_definition
  <<: *build_definition_make

test-cpp-examples-debian-8:
  image: debian:8
  <<: *runtime_image_debian_docker_definition
  dependencies:
   - build-debian-8
  <<: *test_definition_cpp_examples

test-py-examples-debian-8:
  image: debian:8
  <<: *runtime_image_debian_docker_definition
  dependencies:
   - build-debian-8
  <<: *test_definition_python_examples

format-cpp:
  image: debian:8
  <<: *build_image_debian_docker_definition
  stage: quality
  dependencies:
   - build-debian-8
  script:
   - mkdir -p build
   - cd build
   - cmake ..
   - make format
   - cd ..
   - git diff > build/format_check_revisionlist.txt
   - if [ `git diff | wc -l` -gt "0" ]; then false; fi
  artifacts:
    when: on_failure
    paths:
     - "build/format_check_revisionlist.txt"
  allow_failure: true
